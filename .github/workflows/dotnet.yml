name: .NET build and publish

on:
  workflow_call:
    inputs:
      DOCS_FOLDER:
        required: true
        type: string
    secrets:
      NUGET_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/checkout@v2
      with:
        repository: benjamin-hodgson/DocFXTemplate
        path: DocFXTemplate

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Get docfx
      run: |
        curl -LO https://github.com/dotnet/docfx/releases/download/v2.59.2/docfx.zip
        unzip docfx.zip -d docfx

    - name: Get last tag
      id: last_tag
      # v1.1.0
      uses: WyriHaximus/github-action-get-previous-tag@8a0e045f02c0a3a04e1452df58b90fc7e555e950

    - name: Get next version
      id: next_version
      # v1.1.0
      uses: WyriHaximus/github-action-next-semvers@33d116a4c239252582a60a1ba8dbba63ad493ffd
      with:
        version: ${{ steps.last_tag.outputs.tag }}
  
    - name: Compute version for this build
      id: get_version
      run: |
        shopt -s extglob
        echo ::set-output name=BRANCH::${GITHUB_REF#@(refs/tags/|refs/heads/)}
        if [[ $GITHUB_REF == refs/tags/* ]] ;
        then
            echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
        else
            echo ::set-output name=VERSION::${{ steps.next_version.outputs.patch }}-build.${{ github.run_id }}
        fi

    - name: Restore nuget packages
      run: dotnet restore

    - name: Check formatting
      run: dotnet format --no-restore --verify-no-changes --report format-report.json
      
    - name: Build
      run: dotnet build --no-restore --configuration Release -p:Version=${{ steps.get_version.outputs.VERSION }}
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

    - name: Pack
      run: dotnet pack --no-build --configuration Release -o nupkgs -p:Version=${{ steps.get_version.outputs.VERSION }}
        
    - name: Build docs
      run: mono docfx/docfx.exe ${{ inputs.DOCS_FOLDER }}/docfx.json -t ../DocFXTemplate

    - name: Deploy docs
      # v4.1.6
      uses: JamesIves/github-pages-deploy-action@60b5e92fe9331f02fa1cdad4d19ddf875be0361c
      if: github.event_name != 'pull_request'
      with:
        branch: gh-pages
        folder: ${{ inputs.DOCS_FOLDER }}/_site
        target-folder: ${{ steps.get_version.outputs.BRANCH }}

    - uses: codecov/codecov-action@v2
      
    - name: Push nuget packages
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        dotnet nuget push 'nupkgs/*' --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }}
        dotnet nuget push 'nupkgs/*' --source https://nuget.pkg.github.com/benjamin-hodgson/index.json -k ${{ github.token }}
    
    - name: Create Github Release
      # v0.1.14
      uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: nupkgs/*
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
      
    - uses: actions/upload-artifact@v2
      with:
        name: nupkgs
        path: nupkgs

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.DOCS_FOLDER }}
        path: ${{ inputs.DOCS_FOLDER }}/_site

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: format-report.json
        path: format-report.json
