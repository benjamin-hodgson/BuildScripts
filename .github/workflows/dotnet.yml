name: .NET build and publish

on:
  workflow_call:
    inputs:
      DOCS_FOLDER:
        required: false
        type: string
        default: ''
      CHECK_FORMATTING:
        required: false
        type: boolean
        default: true
      TESTPLATFORM:
        required: false
        type: boolean
        default: false
    secrets:
      NUGET_KEY:
        required: true
      CODECOV_TOKEN:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0

    - name: Compute version and write rsp file
      run: |
        git fetch --tags --force  # https://github.com/actions/checkout/issues/290#issuecomment-680260080

        # 'git describe' outputs in a format like
        # 'tagName-commitCount-shortHash', and I want to turn that
        # into a legal nuget version. My tags start with 'v', so
        # let's lop that off, and change the _last_ '-' to '.'
        # (so that everything after tagName becomes part of the
        # prerelease annotation). When we're on an actual tag,
        # 'git describe' simply outputs the tag name, so the second
        # regex will not match (and sed will echo the input unchanged)
        version=$(git describe | sed s/^v// | sed -r 's/(.*)-/\1./')

        echo Version $version >> $GITHUB_STEP_SUMMARY
        echo -p:Configuration=Release -p:Version=$version -p:ContinuousIntegrationBuild=true | tee Directory.Build.rsp

    - id: restore
      name: Restore
      run: dotnet restore && dotnet tool restore

    - id: format
      name: Check formatting
      if: ${{ inputs.CHECK_FORMATTING }}
      run: dotnet format --no-restore --verify-no-changes

    - id: build
      name: Build
      run: dotnet build --no-restore

    - name: Test
      if: ${{ ! inputs.TESTPLATFORM }}
      run: |
        mkdir TestResults
        dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory TestResults
        dotnet tool install -g trx2junit
        trx2junit TestResults/*.trx
        # rename to .junit.xml so it can be picked up by codecov
        ls TestResults/*.xml | xargs -I {} cp {} {}.junit.xml

    - name: Test
      if: ${{ inputs.TESTPLATFORM }}
      run: |
        mkdir TestResults
        dotnet test --no-build -p:TestingPlatformCaptureOutput=false -- --output Detailed --report-trx --coverage --coverage-output-format cobertura --coverage-output cobertura.xml --results-directory $(realpath TestResults)
        dotnet tool install -g trx2junit
        trx2junit TestResults/*.trx
        # rename to .junit.xml so it can be picked up by codecov
        ls TestResults/*.xml | xargs -I {} cp {} {}.junit.xml

    # fails silently if CODECOV_TOKEN was not supplied
    - uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Pack
      run: dotnet pack --no-build

    - name: Attest
      if: github.ref_type == 'tag'
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: 'artifacts/package/release/*'

    - name: Compute checksums
      run: |
        pushd artifacts/package/release
        for file in *;
          do sha256sum -b $file > $file.sha256;
        done
        popd

    - id: push
      name: Push nuget packages
      if: ${{ github.ref_type == 'tag' }}
      run: |
        dotnet nuget push 'artifacts/package/release/*' --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_KEY }}
        dotnet nuget push 'artifacts/package/release/*' --source https://nuget.pkg.github.com/benjamin-hodgson/index.json -k ${{ github.token }}

    - name: Create Github Release
      if: ${{ github.ref_type == 'tag' }}
      # get most recent section of changelog for release notes
      run: cat CHANGELOG.md | sed -r '1,/^-+$/d' | sed -r '/^-+$/q' | head -n -2 | gh release create $GITHUB_REF_NAME ./artifacts/package/release/* --verify-tag --notes-file -
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Deploy docs
      uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8  # v4.7.3
      if: ${{ github.event_name != 'pull_request' && inputs.DOCS_FOLDER != '' }}
      with:
        branch: gh-pages
        folder: artifacts/bin/${{ inputs.DOCS_FOLDER }}/release/_site
        target-folder: ${{ github.ref_name }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: packages
        path: artifacts/package/release

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.DOCS_FOLDER }}
        path: artifacts/bin/${{ inputs.DOCS_FOLDER }}/release/_site

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: TestResults
        path: |
          TestResults/*.trx
          TestResults/*.xml
          TestResults/*/*.cobertura.xml
